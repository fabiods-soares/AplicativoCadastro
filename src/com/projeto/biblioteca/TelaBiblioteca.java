package com.projeto.biblioteca;

import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno Matutino
 */
public class TelaBiblioteca extends javax.swing.JFrame {

    /**
     * Creates new form TelaBiblioteca
     */
    
    private void carregaTabelaUsuarios(){
        UsuarioDAO list = new UsuarioDAO();
        try {
            List<Usuario> usuarios = list.listarUsuarios();
            if(usuarios.isEmpty()){
                JOptionPane.showMessageDialog(this, "Nenhum usuário encontrado");
                return;
            }
            //Colunas da tabela 
             String[] colunas = {"ID","NOME","EMAIL","TELEFONE","TIPO DE USUARIO"}; 
            Object[][] dados = new Object[usuarios.size()][5];
            
            int i = 0;
            for(Usuario usuario:usuarios){
                dados[i][0]=usuario.getId();
                dados[i][1]=usuario.getNome();
                dados[i][2]=usuario.getEmail();
                dados[i][3]=usuario.getTelefone();
                dados[i][4]=usuario.getTipo_usuario();
                i++;  
            }
            
            //Define o modelo da tabela
            
            DefaultTableModel model = new DefaultTableModel(dados,colunas);
            tblUsuarios.setModel(model);
            
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(this, "Erro ao listar"+erro.getMessage());
        }
    }
    public TelaBiblioteca() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        comboTipo = new javax.swing.JComboBox<>();
        btnBId = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblResultado = new javax.swing.JLabel();
        btnPessoasCadastradas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        btnAlterarDados = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtExcluirID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("E-mail:");

        jLabel3.setText("Telefone:");

        jLabel4.setText("Tipo de usuário:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 153, 255));
        jLabel5.setText("Cadastro de Usuario");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente", "Funcionario" }));

        btnBId.setText("Busca Usuario pelo ID");
        btnBId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBIdActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel6.setText("BuscaID: ");

        btnPessoasCadastradas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPessoasCadastradas.setText("Pessoas Cadastradas");
        btnPessoasCadastradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPessoasCadastradasActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Email", "Telefone", "Tipo de Usuário"
            }
        ));
        jScrollPane1.setViewportView(tblUsuarios);

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("by Fabio de Sousa Soares");

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterarDados.setText("Salvar Alterações");
        btnAlterarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarDadosActionPerformed(evt);
            }
        });

        jLabel7.setText("ID a ser Excluido: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(btnPessoasCadastradas)
                .addGap(111, 111, 111)
                .addComponent(btnAlterarDados)
                .addGap(417, 417, 417))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBId)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(btnSalvar)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(40, 40, 40)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNome)
                                        .addComponent(txtEmail)
                                        .addComponent(txtTelefone)
                                        .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnExcluir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtExcluirID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(jLabel7)
                    .addComponent(txtExcluirID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBId)
                    .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPessoasCadastradas)
                    .addComponent(btnAlterarDados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        UsuarioDAO userDAO = new UsuarioDAO();
        //cria um objeto usuario com os dados do formulario
        Usuario user = new Usuario();
        user.setNome(txtNome.getText());
        user.setEmail(txtEmail.getText());
        user.setTelefone(txtTelefone.getText());
        user.setTipo_usuario((String) comboTipo.getSelectedItem());

        try {
            //salva o usuario no banco de dados
            userDAO.criarUsuario(user);
            JOptionPane.showMessageDialog(this, "Usuario criado com sucesso");
            //Limpa os campos após a criação

            txtNome.setText("");
            txtEmail.setText("");
            txtTelefone.setText("");
            comboTipo.setSelectedIndex(0);

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(this, "Erro ao criar usuario: " + erro.getMessage());
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnBIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBIdActionPerformed
        // TODO add your handling code here:
        UsuarioDAO usua = new UsuarioDAO();
        try {
            //Obtém o ID digitado no txtID
            int id = Integer.parseInt(txtId.getText());
            //Busca o usuario pelo ID através do objeto UsuarioDAO
            Usuario usuario = usua.buscarUsuarioPorId(id);
            //Verifica se o usuario foi encontrado
            if (usuario != null) {
                //Exibe os dados no lblResultado
                lblResultado.setText(
                        "ID: " + usuario.getId() + "\n"
                        + " Nome: " + usuario.getNome() + "\n"
                        + " Email: " + usuario.getEmail() + "\n"
                        + " Telefone: " + usuario.getTelefone() + "\n"
                        + " Tipo de usuário: " + usuario.getTipo_usuario()
                );

            } else {
                lblResultado.setText("Usuario não encontrado");
            }
        } catch (SQLException erro) {
            lblResultado.setText("Erro ao buscar usuario: " + erro.getMessage());
        } catch (NumberFormatException erro) {
            lblResultado.setText("ID Inválido");
        }
    }//GEN-LAST:event_btnBIdActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnPessoasCadastradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPessoasCadastradasActionPerformed
        // TODO add your handling code here:
        
        UsuarioDAO list = new UsuarioDAO();
        
        try {
            //Recupera a lista de usuarios do banco de dados
            List<Usuario> usuarios = list.listarUsuarios();
            //Verificar se a lista está vazia
            if (usuarios.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Não foram encontrados usuários no banco de dados.");
                return;
            }
            
            //Cria um modelo de tabela
            
            String[] colunas = {"ID","NOME","EMAIL","TELEFONE","TIPO DE USUARIO"}; 
            Object[][] dados = new Object[usuarios.size()][5];
            
            int i = 0;
            for(Usuario usuario:usuarios){
                dados[i][0]=usuario.getId();
                dados[i][1]=usuario.getNome();
                dados[i][2]=usuario.getEmail();
                dados[i][3]=usuario.getTelefone();
                dados[i][4]=usuario.getTipo_usuario();
                i++;                    
            }
            //Define o modelo de tabela com os dados recuperados
            DefaultTableModel model = new DefaultTableModel(dados,colunas){
                   @Override
                    public boolean isCellEditable(int row, int column) {
                        //Permitir a edição de todas as colunas, exceto a coluna de ID
                        return column != 0;
                    }
                    };
                    tblUsuarios.setModel(model);          
            
            
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(this, "Erro ao listar usuarios"+erro.getMessage());
        }
    }//GEN-LAST:event_btnPessoasCadastradasActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        UsuarioDAO usuarioDAO = new UsuarioDAO();
        //Pega o ID digitado no campo txtExcluirID
        String idText = txtExcluirID.getText();
        if (idText.isEmpty()) {
            //Verifica se o campo esta vazio
            JOptionPane.showMessageDialog(this, "Por favor insira um ID valido");
            return;
            
        }
        try {
            //Converte o ID para inteiro
            int ID = Integer.parseInt(idText);
            //Chama o metodo de exclusão no DAO
            usuarioDAO.deletarUsuario(ID);
            JOptionPane.showMessageDialog(this, "Usuario excluido com sucesso");
            //Limpa o campo txtExcluirID após exclusão
            txtExcluirID.setText("");
            
        } catch (NumberFormatException erro) {
            //trata caso o valor inserido não seja um numero valido
            JOptionPane.showMessageDialog(this,"ID invalido, insira um numero");
        }
        catch(SQLException erro){
            //Trata erros no banco de dados
            JOptionPane.showMessageDialog(this, "Erro ao excluir usuário"+erro.getMessage());
        
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarDadosActionPerformed
        // TODO add your handling code here:
        
        UsuarioDAO usuarioDAO = new UsuarioDAO();
        
        try {
            //Percorre todas as linhas da tabela
            for(int i = 0; i < tblUsuarios.getRowCount(); i++){
                //Captura os valores editados da tabela
                int id = Integer.parseInt(tblUsuarios.getValueAt(i, 0).toString());
                String nome = tblUsuarios.getValueAt(i, 1).toString();
                String email = tblUsuarios.getValueAt(i, 2).toString();
                String telefone = tblUsuarios.getValueAt(i, 3).toString();
                String tipoUsuario = tblUsuarios.getValueAt(i, 4).toString();
                
                //cria um objeto com os valores atualizados
                Usuario usuario = new Usuario();
                usuario.setId(id);
                usuario.setNome(nome);
                usuario.setEmail(email);
                usuario.setTelefone(telefone);
                usuario.setTipo_usuario(tipoUsuario);
                
                //Atualiza o usuario no banco de dados
                
                usuarioDAO.atualizarUsuario(usuario);              
                
            }
            
            //Exibe mensagem de sucesso na alteração
            
            JOptionPane.showMessageDialog(this, "Usuario atualizado!");
            //Recarrega tabela com os dados atualizados
            
            carregaTabelaUsuarios();
            
            
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar o usuario"+erro.getMessage());
        }
        
    }//GEN-LAST:event_btnAlterarDadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBiblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarDados;
    private javax.swing.JButton btnBId;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPessoasCadastradas;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtExcluirID;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
